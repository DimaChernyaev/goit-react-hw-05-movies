{"version":3,"file":"static/js/134.05e75074.chunk.js","mappings":"uRAQO,SAAeA,IAAtB,+B,aAAO,O,oBAAA,oGACkBC,EAAAA,EAAAA,IAAA,mDADlB,cACCC,EADD,yBAKEA,EAASC,MALX,kEASA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAA+BC,GAA/B,uFAEkBJ,EAAAA,EAAAA,IAAA,6CACiBI,IAHnC,cAECH,EAFD,yBAMEA,EAASC,MANX,kEAUA,SAAeG,EAAtB,oC,aAAO,O,oBAAA,WAA2BD,EAAIE,GAA/B,uFACkBN,EAAAA,EAAAA,IAAA,6CACiBI,EADjB,YACuBE,IAFzC,cACCL,EADD,yBAKEA,EAASC,MALX,kEASA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,uFACkBR,EAAAA,EAAAA,IAAA,0DAC8BQ,IAFhD,cACCP,EADD,yBAKEA,EAASC,MALX,kEAjCPF,EAAAA,EAAAA,SAAAA,OAAwB,CACtBS,QAFiB,mC,oFCanB,EAbkB,SAAC,GAAmB,IAAjBL,EAAgB,EAAhBA,GAAIM,EAAY,EAAZA,MACjBC,GAAWC,EAAAA,EAAAA,MAGjB,OAFAC,QAAQC,IAAIH,IAGV,yBACE,SAAC,KAAD,CAAMI,GAAE,kBAAaX,GAAMY,MAAO,CAAEC,KAAMN,GAA1C,SACGD,KAIR,ECDD,EAVkB,SAAC,GAAe,IAAbQ,EAAY,EAAZA,MACnB,OACE,wBACGA,EAAMC,KAAI,gBAAGf,EAAH,EAAGA,GAAIM,EAAP,EAAOA,MAAP,OACT,SAAC,EAAD,CAAoBN,GAAIA,EAAIM,MAAOA,GAAnBN,EADP,KAKhB,C,0HCsCD,UA3Ce,WAAO,IAAD,EACnB,GAAwCgB,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAsCC,EAAAA,EAAAA,MAAtC,eAAOC,EAAP,KAAoBC,EAApB,KACMC,EAAK,UAAGF,EAAYG,IAAI,gBAAnB,QAA+B,GA0B1C,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCAGd,uGAC4BrB,EAAAA,EAAAA,IAAcmB,GAD1C,gBACUG,EADV,EACUA,QAERP,GAAgB,OAAIO,IAHtB,4CAHc,sBACA,KAAVH,GADU,mCASdI,EACD,GAAE,CAACJ,KAGF,gCACE,iBAAMK,SA1BV,SAAiCC,GAC/BA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,cAEnB,GAAwC,KAApCD,EAAKE,SAASC,YAAYC,MAC5B,OAAOb,EAAe,CAAC,GAGzBA,EAAe,CAAEC,MAAOQ,EAAKE,SAASC,YAAYC,QAClDJ,EAAKK,OACN,EAgBG,UACE,8BACE,kBAAOC,KAAK,OAAOC,KAAK,iBACxB,mBAAQD,KAAK,SAAb,0BAIJ,SAAC,IAAD,CAAWtB,MAAOG,MAGvB,C","sources":["components/helpers/filmApi.js","components/movieList/MovieItem.jsx","components/movieList/MovieList.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst AUTH_TOKEN = 'ce1c433bf23cc41cab87899af39da180';\naxios.defaults.params = {\n  api_key: AUTH_TOKEN,\n};\n\n// Запит за популярними фільмами\nexport async function getTrendingFilms() {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day`\n  );\n\n  return responce.data;\n}\n\n// Запит за конкретним фільмом \nexport async function getCurrentFilms(id) {\n\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}`\n  );\n\n  return responce.data;\n}\n\n// Запит за кастом та коментаром\nexport async function getInfoFilm(id, category) {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/${category}`\n  );\n\n  return responce.data;\n}\n\n// Запит за фільмом по пошуку за іменнем\nexport async function getSearchFilm(movie) {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${movie}`\n  );\n\n  return responce.data;\n}\n\n\n\n\n\n","import { Link, useLocation } from 'react-router-dom';\n\nconst MovieItem = ({ id, title }) => {\n  const location = useLocation();\n  console.log(location);\n\n  return (\n    <li>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        {title}\n      </Link>\n    </li>\n  );\n};\n\nexport default MovieItem;\n","import MovieItem from './MovieItem';\n\nconst MovieList = ({ films }) => {\n  return (\n    <ul>\n      {films.map(({ id, title }) => (\n        <MovieItem key={id} id={id} title={title} />\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchFilm } from 'components/helpers/filmApi';\nimport MovieList from 'components/movieList/MovieList';\n\nconst Movies = () => {\n  const [searchResult, setSearchResult] = useState([]);\n  const [searchQuery, setSearchQuery] = useSearchParams();\n  const query = searchQuery.get('query') ?? '';\n\n  function handleSubmitSearchQuery(event) {\n    event.preventDefault();\n    const form = event.currentTarget;\n\n    if (form.elements.saerchValue.value === '') {\n      return setSearchQuery({});\n    }\n\n    setSearchQuery({ query: form.elements.saerchValue.value });\n    form.reset();\n  }\n\n  useEffect(() => {\n    if (query === '') return;\n\n    async function searchFilm() {\n      const { results } = await getSearchFilm(query);\n\n      setSearchResult([...results]);\n    }\n\n    searchFilm();\n  }, [query]);\n\n  return (\n    <section>\n      <form onSubmit={handleSubmitSearchQuery}>\n        <label>\n          <input type=\"text\" name=\"saerchValue\"></input>\n          <button type=\"submit\">Search</button>\n        </label>\n      </form>\n\n      <MovieList films={searchResult} />\n    </section>\n  );\n};\n\nexport default Movies;\n"],"names":["getTrendingFilms","axios","responce","data","getCurrentFilms","id","getInfoFilm","category","getSearchFilm","movie","api_key","title","location","useLocation","console","log","to","state","from","films","map","useState","searchResult","setSearchResult","useSearchParams","searchQuery","setSearchQuery","query","get","useEffect","results","searchFilm","onSubmit","event","preventDefault","form","currentTarget","elements","saerchValue","value","reset","type","name"],"sourceRoot":""}