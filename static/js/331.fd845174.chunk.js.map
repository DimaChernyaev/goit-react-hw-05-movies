{"version":3,"file":"static/js/331.fd845174.chunk.js","mappings":"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","sources":["components/cast/castItem/CastItem.styled.js","components/cast/castItem/CastItem.jsx","components/cast/Cast.styled.js","components/cast/Cast.jsx","components/errorMessage/ErrorMessage.styled.js","components/errorMessage/ErrorMessage.jsx","components/helpers/constMessage.js","components/helpers/filmApi.js","components/helpers/holder.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ItemCast = styled.li`\n  padding: 5px;\n  background: rgba(255, 255, 255, 0.7);\n  box-shadow: 4px 4px 5px 0px rgba(0, 0, 0, 0.7);\n  border-radius: 8px;\n`;\n\nexport const ItemText = styled.p`\n  font-size: 12px;\n  width: 100px;\n\n  &:first-of-type {\n    margin-bottom: 5px;\n  }\n`;\n","import Holder from 'components/helpers/holder';\nimport { ItemCast, ItemText } from './CastItem.styled';\n\nconst CastItem = ({ character, name, profile_path }) => {\n  return (\n    <ItemCast>\n      {profile_path !== null ? (\n        <img\n          src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n          alt={name}\n          width={120}\n        ></img>\n      ) : (\n        <Holder width={120} height={180} />\n      )}\n      <ItemText>Name: {name}</ItemText>\n      <ItemText>Character: {character}</ItemText>\n    </ItemCast>\n  );\n};\n\nexport default CastItem;\n","import styled from '@emotion/styled';\n\nexport const CastList = styled.ul`\n  margin-top: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  justify-content: center;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getInfoFilm } from 'components/helpers/filmApi';\nimport CastItem from './castItem/CastItem';\nimport Loader from 'components/loader/Loader';\nimport ErrorMessage from 'components/errorMessage/ErrorMessage';\nimport constMessage from 'components/helpers/constMessage';\nimport { CastList } from './Cast.styled';\n\nconst Cast = () => {\n  const [castFilm, setCastFilm] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const abortCtrl = new AbortController();\n\n    async function getCast() {\n      try {\n        setIsLoading(true);\n        const { cast } = await getInfoFilm(movieId, 'credits', abortCtrl);\n\n        if (!cast.length) {\n          setError(constMessage.errorCast);\n          return;\n        }\n\n        setCastFilm([...cast]);\n        setError(null);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError(constMessage.errorFetch);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    getCast();\n\n    return () => {\n      abortCtrl.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <>\n      {isError !== null && <ErrorMessage>{isError}</ErrorMessage>}\n      {isLoading && <Loader />}\n      {castFilm && (\n        <CastList>\n          {castFilm.map(({ id, name, character, profile_path }) => {\n            return (\n              <CastItem\n                key={id}\n                profile_path={profile_path}\n                name={name}\n                character={character}\n              />\n            );\n          })}\n        </CastList>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import styled from '@emotion/styled';\n\nexport const Message = styled.p`\n  display: inline-flex;\n  padding: 8px;\n  background: rgba(255, 255, 255, 0.7);\n  border-radius: 8px;\n  margin-top: 20px;\n  color: black;\n  font-size: 18px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { Message } from './ErrorMessage.styled';\n\nconst ErrorMessage = ({ children }) => {\n  return <Message>{children}</Message>;\n};\n\nexport default ErrorMessage;\n","const constMessage = {\n  emptyLine: \"Sorry, you didn't enter your search term, please try again!\",\n  errorFetch: 'Oops! Something went wrong! Try reloading this page.',\n  errorCast: 'Sorry but there is no information about the cast of the movie.',\n  errorRewievs: 'Sorry, but there are no reviews yet.',\n};\n\nexport default constMessage;\n","import axios from 'axios';\n\nconst AUTH_TOKEN = 'ce1c433bf23cc41cab87899af39da180';\naxios.defaults.params = {\n  api_key: AUTH_TOKEN,\n};\n\n// Запит за популярними фільмами\nexport async function getTrendingFilms(abortCtrl) {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day`,\n    {\n      signal: abortCtrl.signal,\n    }\n  );\n\n  return responce.data;\n}\n\n// Запит за конкретним фільмом \nexport async function getCurrentFilms(id, abortCtrl) {\n  const responce = await axios.get(`https://api.themoviedb.org/3/movie/${id}`, {\n    signal: abortCtrl.signal,\n  });\n\n  return responce.data;\n}\n\n// Запит за кастом та коментаром\nexport async function getInfoFilm(id, category, abortCtrl) {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/${category}`,\n    {\n      signal: abortCtrl.signal,\n    }\n  );\n\n  return responce.data;\n}\n\n// Запит за фільмом по пошуку за іменнем\nexport async function getSearchFilm(movie, abortCtrl) {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${movie}`,\n    {\n      signal: abortCtrl.signal,\n    }\n  );\n\n  return responce.data;\n}\n\n\n\n\n\n","\nconst Holder = ({ width, height }) => {\n  return (\n    <img\n      src=\"https://media.istockphoto.com/id/1075374570/vector/coming-soon.jpg?s=612x612&w=0&k=20&c=6W1rSRAoJnxtMSi98mGD7LjiXA3xQMotLn8hJnmXjzI=\"\n      alt='not found'\n      width={width}\n      height={height}\n    ></img>\n  );\n};\nexport default Holder;\n"],"names":["ItemCast","styled","ItemText","character","name","profile_path","src","alt","width","height","CastList","useState","castFilm","setCastFilm","isLoading","setIsLoading","isError","setError","movieId","useParams","useEffect","abortCtrl","AbortController","getInfoFilm","cast","length","constMessage","code","getCast","abort","ErrorMessage","Loader","map","id","Message","children","emptyLine","errorFetch","errorCast","errorRewievs","getTrendingFilms","axios","signal","responce","data","getCurrentFilms","category","getSearchFilm","movie","api_key"],"sourceRoot":""}