{"version":3,"file":"static/js/590.4cce51ad.chunk.js","mappings":"sLAEaA,E,QAAUC,EAAAA,EAAH,+H,SCIpB,EAJqB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtB,OAAO,SAACF,EAAD,UAAUE,GAClB,C,qBCGD,IAPqB,CACnBC,UAAW,6DACXC,WAAY,sDACZC,UAAW,gEACXC,aAAc,sC,2KCIT,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAAgCC,GAAhC,uFACkBC,EAAAA,EAAAA,IAAA,kDAErB,CACEC,OAAQF,EAAUE,SAJjB,cACCC,EADD,yBAQEA,EAASC,MARX,kEAYA,SAAeC,EAAtB,oC,aAAO,O,oBAAA,WAA+BC,EAAIN,GAAnC,uFACkBC,EAAAA,EAAAA,IAAA,6CAAgDK,GAAM,CAC3EJ,OAAQF,EAAUE,SAFf,cACCC,EADD,yBAKEA,EAASC,MALX,kEASA,SAAeG,EAAtB,sC,aAAO,O,oBAAA,WAA2BD,EAAIE,EAAUR,GAAzC,uFACkBC,EAAAA,EAAAA,IAAA,6CACiBK,EADjB,YACuBE,GAC5C,CACEN,OAAQF,EAAUE,SAJjB,cACCC,EADD,yBAQEA,EAASC,MARX,kEAYA,SAAeK,EAAtB,iDAAO,OAAP,oBAAO,WAA6BC,EAAOV,GAApC,uFACkBC,EAAAA,EAAAA,IAAA,0DAC8BS,GACnD,CACER,OAAQF,EAAUE,SAJjB,cACCC,EADD,yBAQEA,EAASC,MARX,kEAtCPH,EAAAA,EAAAA,SAAAA,OAAwB,CACtBU,QAFiB,mC,8MCANC,EAAOnB,EAAAA,EAAAA,GAAH,yGAMJoB,EAASpB,EAAAA,EAAAA,EAAH,oL,SCGnB,EAToB,SAAC,GAAyB,IAAvBqB,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC7B,OACE,UAACH,EAAD,YACE,UAACC,EAAD,WAAQ,WAASC,MACjB,uBAAIC,MAGT,ECPYC,EAAcvB,EAAAA,EAAAA,GAAH,wGC4DxB,EArDgB,WACd,OAAsCwB,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,MAArC,eAAOK,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAkCR,OAhCAE,EAAAA,EAAAA,YAAU,WACR,IAAM1B,EAAY,IAAI2B,gBADR,wCAGd,6FACEN,GAAa,GADf,mBAI8Bd,EAAAA,EAAAA,IAAYiB,EAAS,UAAWxB,GAJ9D,oBAIY4B,EAJZ,EAIYA,SAEKC,OANjB,uBAOMN,EAASO,EAAAA,EAAAA,cAPf,0BAWIX,GAAe,OAAIS,IACnBL,EAAS,MAZb,kDAcuB,iBAAf,KAAMQ,MACRR,EAASO,EAAAA,EAAAA,YAff,yBAkBIT,GAAa,GAlBjB,8EAHc,sBA2Bd,OA3Bc,mCAyBdW,GAEO,WACLhC,EAAUiC,OACX,CACF,GAAE,CAACT,KAGF,gCACe,OAAZF,IAAoB,SAACY,EAAA,EAAD,UAAeZ,IACnCF,IAAa,SAACe,EAAA,EAAD,IACbjB,IACC,SAACF,EAAD,UACGE,EAAYkB,KAAI,YAA8B,IAA3B9B,EAA0B,EAA1BA,GAAIQ,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC9B,OAAO,SAAC,EAAD,CAAsBD,OAAQA,EAAQC,QAASA,GAA7BT,EAC1B,QAKV,C","sources":["components/errorMessage/ErrorMessage.styled.js","components/errorMessage/ErrorMessage.jsx","components/helpers/constMessage.js","components/helpers/filmApi.js","components/reviews/reviewsItem/ReviewsItem.styled.js","components/reviews/reviewsItem/ReviewsItem.jsx","components/reviews/Reviews.styled.js","components/reviews/Reviews.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Message = styled.p`\n  margin-top: 20px;\n  color: black;\n  font-size: 18px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { Message } from './ErrorMessage.styled';\n\nconst ErrorMessage = ({ children }) => {\n  return <Message>{children}</Message>;\n};\n\nexport default ErrorMessage;\n","const constMessage = {\n  emptyLine: \"Sorry, you didn't enter your search term, please try again\",\n  errorFetch: 'Oops! Something went wrong! Try reloading this page',\n  errorCast: 'Sorry but there is no information about the cast of the movie',\n  errorRewievs: 'Sorry, but there are no reviews yet',\n};\n\nexport default constMessage;\n","import axios from 'axios';\n\nconst AUTH_TOKEN = 'ce1c433bf23cc41cab87899af39da180';\naxios.defaults.params = {\n  api_key: AUTH_TOKEN,\n};\n\n// Запит за популярними фільмами\nexport async function getTrendingFilms(abortCtrl) {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day`,\n    {\n      signal: abortCtrl.signal,\n    }\n  );\n\n  return responce.data;\n}\n\n// Запит за конкретним фільмом \nexport async function getCurrentFilms(id, abortCtrl) {\n  const responce = await axios.get(`https://api.themoviedb.org/3/movie/${id}`, {\n    signal: abortCtrl.signal,\n  });\n\n  return responce.data;\n}\n\n// Запит за кастом та коментаром\nexport async function getInfoFilm(id, category, abortCtrl) {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/${category}`,\n    {\n      signal: abortCtrl.signal,\n    }\n  );\n\n  return responce.data;\n}\n\n// Запит за фільмом по пошуку за іменнем\nexport async function getSearchFilm(movie, abortCtrl) {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${movie}`,\n    {\n      signal: abortCtrl.signal,\n    }\n  );\n\n  return responce.data;\n}\n\n\n\n\n\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  padding: 8px;\n  background: rgba(255, 255, 255, 0.7);\n  border-radius: 8px;\n`;\n\nexport const Author = styled.p`\n  margin-bottom: 10px;\n  display: inline-flex;\n  padding: 8px;\n\n  font-size: 16px;\n  background-color: black;\n  color: white;\n  border-radius: 8px;\n`;\n","import { Item, Author } from './ReviewsItem.styled';\n\nconst ReviewsItem = ({ author, content }) => {\n  return (\n    <Item>\n      <Author>Author: {author}</Author>\n      <p>{content}</p>\n    </Item>\n  );\n};\n\nexport default ReviewsItem;\n","import styled from '@emotion/styled';\n\nexport const ReviewsList = styled.ul`\n  margin-top: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getInfoFilm } from 'components/helpers/filmApi';\nimport ErrorMessage from 'components/errorMessage/ErrorMessage';\nimport constMessage from 'components/helpers/constMessage';\nimport Loader from 'components/loader/Loader';\nimport ReviewsItem from './reviewsItem/ReviewsItem';\nimport { ReviewsList } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviewsFilm, setReviewsFilm] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const abortCtrl = new AbortController();\n\n    async function getCast() {\n      setIsLoading(true);\n\n      try {\n        const { results } = await getInfoFilm(movieId, 'reviews', abortCtrl);\n\n        if (!results.length) {\n          setError(constMessage.errorRewievs);\n          return;\n        }\n\n        setReviewsFilm([...results]);\n        setError(null);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError(constMessage.errorFetch);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    getCast();\n\n    return () => {\n      abortCtrl.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <>\n      {isError !== null && <ErrorMessage>{isError}</ErrorMessage>}\n      {isLoading && <Loader />}\n      {reviewsFilm && (\n        <ReviewsList>\n          {reviewsFilm.map(({ id, author, content }) => {\n            return <ReviewsItem key={id} author={author} content={content} />;\n          })}\n        </ReviewsList>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["Message","styled","children","emptyLine","errorFetch","errorCast","errorRewievs","getTrendingFilms","abortCtrl","axios","signal","responce","data","getCurrentFilms","id","getInfoFilm","category","getSearchFilm","movie","api_key","Item","Author","author","content","ReviewsList","useState","reviewsFilm","setReviewsFilm","isLoading","setIsLoading","isError","setError","movieId","useParams","useEffect","AbortController","results","length","constMessage","code","getCast","abort","ErrorMessage","Loader","map"],"sourceRoot":""}