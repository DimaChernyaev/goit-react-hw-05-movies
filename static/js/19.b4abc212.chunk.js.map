{"version":3,"file":"static/js/19.b4abc212.chunk.js","mappings":"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","sources":["components/errorMessage/ErrorMessage.styled.js","components/errorMessage/ErrorMessage.jsx","components/helpers/constMessage.js","components/helpers/filmApi.js","components/helpers/holder.js","components/movieDetails/CurrentMovie.styled.js","components/movieDetails/generesList/GeneresList.styled.js","components/movieDetails/generesList/GeneresList.jsx","components/movieDetails/linkDetails/LinkDetails.styled.js","components/movieDetails/linkDetails/LinkDetails.jsx","components/movieDetails/CurrentMovie.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Message = styled.p`\n  margin-top: 20px;\n  color: black;\n  font-size: 18px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { Message } from './ErrorMessage.styled';\n\nconst ErrorMessage = ({ children }) => {\n  return <Message>{children}</Message>;\n};\n\nexport default ErrorMessage;\n","const constMessage = {\n  emptyLine: \"Sorry, you didn't enter your search term, please try again\",\n  errorFetch: 'Oops! Something went wrong! Try reloading this page',\n  errorCast: 'Sorry but there is no information about the cast of the movie',\n  errorRewievs: 'Sorry, but there are no reviews yet',\n};\n\nexport default constMessage;\n","import axios from 'axios';\n\nconst AUTH_TOKEN = 'ce1c433bf23cc41cab87899af39da180';\naxios.defaults.params = {\n  api_key: AUTH_TOKEN,\n};\n\n// Запит за популярними фільмами\nexport async function getTrendingFilms(abortCtrl) {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day`,\n    {\n      signal: abortCtrl.signal,\n    }\n  );\n\n  return responce.data;\n}\n\n// Запит за конкретним фільмом \nexport async function getCurrentFilms(id, abortCtrl) {\n  const responce = await axios.get(`https://api.themoviedb.org/3/movie/${id}`, {\n    signal: abortCtrl.signal,\n  });\n\n  return responce.data;\n}\n\n// Запит за кастом та коментаром\nexport async function getInfoFilm(id, category, abortCtrl) {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/${category}`,\n    {\n      signal: abortCtrl.signal,\n    }\n  );\n\n  return responce.data;\n}\n\n// Запит за фільмом по пошуку за іменнем\nexport async function getSearchFilm(movie, abortCtrl) {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${movie}`,\n    {\n      signal: abortCtrl.signal,\n    }\n  );\n\n  return responce.data;\n}\n\n\n\n\n\n","\nconst Holder = ({ width, height }) => {\n  return (\n    <img\n      src=\"https://media.istockphoto.com/id/1075374570/vector/coming-soon.jpg?s=612x612&w=0&k=20&c=6W1rSRAoJnxtMSi98mGD7LjiXA3xQMotLn8hJnmXjzI=\"\n      alt='not found'\n      width={width}\n      height={height}\n    ></img>\n  );\n};\nexport default Holder;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Section = styled.section`\n  padding-top: 20px;\n  padding-bottom: 40px;\n`;\n\nexport const Wrapper = styled.section`\n  margin-top: 20px;\n  display: flex;\n  gap: 30px;\n`;\n\nexport const ButtonBack = styled(Link)`\n  display: inline-flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  font-weight: 400;\n  font-size: 16px;\n  color: white;\n  width: 300px;\n\n  background-color: black;\n  border: 2px solid #ffd723;\n  border-radius: 8px;\n  cursor: pointer;\n\n  transition: color 250ms linear, border-color 250ms linear,\n    box-shadow 250ms linear, background-color 250ms linear;\n\n  &:hover {\n    color: #ffd723;\n    background-color: black;\n    border-color: black;\n    box-shadow: 1px -1px 2px rgba(78, 78, 78, 0.8);\n  }\n`;\n\nexport const TitleFilm = styled.h2`\n  font-size: 42px;\n  margin-bottom: 20px;\n`;\n\nexport const Text = styled.p`\n  font-size: 20px;\n  margin-bottom: 10px;\n  color: black;\n`;\n\nexport const TitleText = styled.h3`\n  font-size: 28px;\n  margin-bottom: 10px;\n`;\n\n","import styled from '@emotion/styled';\n\nexport const GenresList = styled.ul`\n  display: flex;\n  gap: 10px;\n`;\n\nexport const GenresItem = styled.li`\n  padding: 5px;\n  font-size: 20px;\n  color: black;\n  border: 1px solid black;\n  border-radius: 8px;\n`;","import { GenresList, GenresItem } from './GeneresList.styled';\n\nconst GeneresList = ({ genres }) => {\n  return (\n    <GenresList>\n      {genres ? genres.map(({ id, name }) => (\n        <GenresItem key={id}>\n          <p>{name}</p>\n        </GenresItem>\n      )) : 'Loading...'}\n    </GenresList>\n  );\n};\n\nexport default GeneresList;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const LinkList = styled.ul`\n  display: flex;\n  gap: 20px;\n  margin-top: 20px;\n  border: 2px solid #ffd723;\n  border-radius: 8px;\n  background-color: black;\n`;\n\nexport const Link = styled(NavLink)`\n  color: white;\n  font-size: 20px;\n  padding: 10px;\n  text-align: center;\n\n  &:hover {\n    color: #ffd723;\n  }\n\n  &.active {\n    color: #ffd723;\n  }\n`;\n","\nimport { LinkList, Link } from './LinkDetails.styled';\n\nconst LinkDetails = () => {\n  return (\n    <>\n      <LinkList>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </LinkList>\n    </>\n  );\n};\n\nexport default LinkDetails;\n","import { Wrapper, TitleFilm, Text, TitleText } from './CurrentMovie.styled';\nimport GeneresList from './generesList/GeneresList';\nimport Holder from 'components/helpers/holder';\nimport LinkDetails from './linkDetails/LinkDetails';\nimport Loader from 'components/loader/Loader';\nimport { Outlet } from 'react-router-dom';\nimport { Suspense } from 'react';\n\nconst CurrentMovie = ({ movie }) => {\n  const { poster_path, title, vote_average, overview, release_date, genres } =\n    movie;\n  const percentage = (vote_average * 10).toFixed();\n  const date = release_date?.slice(0, 4);\n\n  return (\n    <Wrapper>\n      {poster_path ? (\n        <img\n          src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n          alt={title}\n          width={300}\n          height={450}\n        ></img>\n      ) : (\n        <Holder width={300} height={450} />\n      )}\n      <div>\n        <TitleFilm>\n          {title ? title : 'Loading...'}\n          <span>{release_date ? `(${date})` : ''}</span>\n        </TitleFilm>\n        <Text>\n          User score: {vote_average ? `${percentage}%` : 'Loading...'}\n        </Text>\n        <TitleText>Overview</TitleText>\n        <Text>{overview ? overview : 'Loading...'}</Text>\n        <TitleText>Genres</TitleText>\n        <GeneresList genres={genres} />\n        <LinkDetails />\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </Wrapper>\n  );\n};\n\nexport default CurrentMovie;\n","import { useParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect, useRef } from 'react';\nimport { getCurrentFilms } from 'components/helpers/filmApi';\nimport CurrentMovie from 'components/movieDetails/CurrentMovie';\nimport ErrorMessage from 'components/errorMessage/ErrorMessage';\nimport constMessage from 'components/helpers/constMessage';\nimport {\n  Section,\n  ButtonBack,\n} from 'components/movieDetails/CurrentMovie.styled';\nimport { BiSolidDoorOpen } from 'react-icons/bi';\nimport Loader from 'components/loader/Loader';\n\n\nconst MovieDetails = () => {\n  const [currentFilm, setCurrentFilm] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setError] = useState(null);\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const abortCtrl = new AbortController();\n    setCurrentFilm({});\n    setIsLoading(true);\n\n    async function getFilm() {\n      try {\n        const film = await getCurrentFilms(movieId, abortCtrl);\n\n        if (film === {}) {\n          setError(constMessage.errorFetch);\n          return;\n        }\n\n        setCurrentFilm({ ...film });\n        setError(null);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError(constMessage.errorFetch);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    getFilm();\n\n    return () => {\n      abortCtrl.abort();\n    };\n  }, [movieId]);\n\n  console.log(isLoading);\n\n  return (\n    <>\n      {isError !== null && <ErrorMessage>{isError}</ErrorMessage>}\n      {isLoading && <Loader />}\n      {currentFilm && (\n        <Section>\n          <ButtonBack to={backLink.current}>\n            <BiSolidDoorOpen size={20} /> Go back\n          </ButtonBack>\n          <CurrentMovie movie={currentFilm} to={backLink.current} />\n        </Section>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["Message","styled","children","emptyLine","errorFetch","errorCast","errorRewievs","getTrendingFilms","abortCtrl","axios","signal","responce","data","getCurrentFilms","id","getInfoFilm","category","getSearchFilm","movie","api_key","width","height","src","alt","Section","Wrapper","ButtonBack","Link","TitleFilm","Text","TitleText","GenresList","GenresItem","genres","map","name","LinkList","NavLink","to","poster_path","title","vote_average","overview","release_date","percentage","toFixed","date","slice","Suspense","fallback","Loader","useState","currentFilm","setCurrentFilm","isLoading","setIsLoading","isError","setError","movieId","useParams","location","useLocation","backLink","useRef","state","from","useEffect","AbortController","film","constMessage","code","getFilm","abort","console","log","ErrorMessage","current","size"],"sourceRoot":""}