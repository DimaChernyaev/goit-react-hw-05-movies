{"version":3,"file":"static/js/805.da3ee7ee.chunk.js","mappings":"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","sources":["components/errorMessage/ErrorMessage.styled.js","components/errorMessage/ErrorMessage.jsx","components/helpers/constEmpty.js","components/helpers/constMessage.js","components/helpers/filmApi.js","components/helpers/holder.js","components/movieList/MovieList.styled.js","components/movieList/MovieItem.jsx","components/movieList/MovieList.jsx","components/moviesForm/MoviesForm.styled.js","components/moviesForm/MoviesForm.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Message = styled.p`\n  display: inline-flex;\n  padding: 8px;\n  background: rgba(255, 255, 255, 0.7);\n  border-radius: 8px;\n  margin-top: 20px;\n  color: black;\n  font-size: 18px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { Message } from './ErrorMessage.styled';\n\nconst ErrorMessage = ({ children }) => {\n  return <Message>{children}</Message>;\n};\n\nexport default ErrorMessage;\n","const constEmpty = {\n  emptyOverview: 'Sorry, but overview missing.',\n  emptyGenres: 'Sorry, but genre information missing.',\n};\n\nexport default constEmpty;\n","const constMessage = {\n  emptyLine: \"Sorry, you didn't enter your search term, please try again!\",\n  errorFetch: 'Oops! Something went wrong! Try reloading this page.',\n  errorCast: 'Sorry but there is no information about the cast of the movie.',\n  errorRewievs: 'Sorry, but there are no reviews yet.',\n};\n\nexport default constMessage;\n","import axios from 'axios';\n\nconst AUTH_TOKEN = 'ce1c433bf23cc41cab87899af39da180';\naxios.defaults.params = {\n  api_key: AUTH_TOKEN,\n};\n\n// Запит за популярними фільмами\nexport async function getTrendingFilms(abortCtrl) {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day`,\n    {\n      signal: abortCtrl.signal,\n    }\n  );\n\n  return responce.data;\n}\n\n// Запит за конкретним фільмом \nexport async function getCurrentFilms(id, abortCtrl) {\n  const responce = await axios.get(`https://api.themoviedb.org/3/movie/${id}`, {\n    signal: abortCtrl.signal,\n  });\n\n  return responce.data;\n}\n\n// Запит за кастом та коментаром\nexport async function getInfoFilm(id, category, abortCtrl) {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/${category}`,\n    {\n      signal: abortCtrl.signal,\n    }\n  );\n\n  return responce.data;\n}\n\n// Запит за фільмом по пошуку за іменнем\nexport async function getSearchFilm(movie, abortCtrl) {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${movie}`,\n    {\n      signal: abortCtrl.signal,\n    }\n  );\n\n  return responce.data;\n}\n\n\n\n\n\n","\nconst Holder = ({ width, height }) => {\n  return (\n    <img\n      src=\"https://media.istockphoto.com/id/1075374570/vector/coming-soon.jpg?s=612x612&w=0&k=20&c=6W1rSRAoJnxtMSi98mGD7LjiXA3xQMotLn8hJnmXjzI=\"\n      alt='not found'\n      width={width}\n      height={height}\n    ></img>\n  );\n};\nexport default Holder;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding-top: 30px;\n  padding-bottom: 30px;\n`;\n\nexport const Item = styled.li`\n  background: rgba(255, 255, 255, 0.7);\n  width: 100%;\n  border: none;\n  border-radius: 8px;\n  owerflow: hidden;\n  transition: box-shadow 250ms linear;\n\n  &:hover {\n    box-shadow: 4px 4px 5px 0px rgba(0, 0, 0, 0.7);\n  }\n`;\n\nexport const ItemLink = styled(Link)`\n  width: 100%;\n  height: 100%;\n  padding: 8px;\n  display: flex;\n  gap: 20px;\n`;\n\nexport const WrapperText = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const MovieTitle = styled.h2`\n  font-size: 18px;\n  color: black;\n`;\n\nexport const Text = styled.p`\n  color: black;\n  font-size: 16px;\n`;\n\nexport const Image = styled.img`\n  border-radius: 8px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  Item,\n  ItemLink,\n  MovieTitle,\n  WrapperText,\n  Text,\n  Image,\n} from './MovieList.styled';\nimport Holder from 'components/helpers/holder';\nimport constEmpty from 'components/helpers/constEmpty';\n\nconst MovieItem = ({ id, title, poster_path, overview }) => {\n  const location = useLocation();\n\n  return (\n    <Item>\n      <ItemLink to={`/movies/${id}`} state={{ from: location }}>\n        {poster_path ? (\n          <Image\n            src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n            alt={title}\n            width={80}\n            height={120}\n          />\n        ) : (\n          <Holder width={80} height={120} />\n        )}\n        <WrapperText>\n          <MovieTitle>{title}</MovieTitle>\n          <Text>{overview ? overview : constEmpty.emptyOverview}</Text>\n        </WrapperText>\n      </ItemLink>\n    </Item>\n  );\n};\n\nexport default MovieItem;\n","import MovieItem from './MovieItem';\nimport { List } from './MovieList.styled';\n\nconst MovieList = ({ films }) => {\n  return (\n    <List>\n      {films.map(({ id, title, poster_path, overview }) => (\n        <MovieItem\n          key={id}\n          id={id}\n          title={title}\n          poster_path={poster_path}\n          overview={overview}\n        />\n      ))}\n    </List>\n  );\n};\n\nexport default MovieList;\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const SearchForm = styled(Form)`\n  padding-top: 20px;\n`;\n\nexport const Input = styled(Field)`\n  padding: 5px 15px;\n  border-color: #ffd723;\n  border-radius: 8px;\n  width: 400px;\n  font-size: 18px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 20px;\n  font-weight: 400;\n  font-size: 16px;\n  color: white;\n  text-align: center;\n\n  background-color: black;\n  border: 2px solid #ffd723;\n  border-radius: 8px;\n  cursor: pointer;\n\n  transition: color 250ms linear, border-color 250ms linear,\n    box-shadow 250ms linear, background-color 250ms linear;\n\n  &:hover {\n    color: #ffd723;\n    background-color: black;\n    border-color: black;\n    box-shadow: 1px -1px 2px rgba(78, 78, 78, 0.8);\n  }\n`;\n","import { Formik } from 'formik';\nimport { SearchForm, Input, Label, Button } from './MoviesForm.styled';\n\nconst MoviesForm = ({ onSubmitForm }) => {\n  const initialValues = {\n    searchMovie: '',\n  };\n\n  function submitForm(values, { resetForm }) {\n    onSubmitForm(values);\n    resetForm();\n  }\n\n  return (\n    <Formik initialValues={initialValues} onSubmit={submitForm}>\n      <SearchForm>\n        <Label>\n          <Input type=\"text\" name=\"searchMovie\"></Input>\n          <Button type=\"submit\">Search</Button>\n        </Label>\n      </SearchForm>\n    </Formik>\n  );\n};\n\nexport default MoviesForm;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchFilm } from 'components/helpers/filmApi';\nimport MovieList from 'components/movieList/MovieList';\nimport Loader from 'components/loader/Loader';\nimport ErrorMessage from 'components/errorMessage/ErrorMessage';\nimport constMessage from 'components/helpers/constMessage';\nimport MoviesForm from 'components/moviesForm/MoviesForm';\n\nconst Movies = () => {\n  const [searchResult, setSearchResult] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setError] = useState(null);\n  const [searchQuery, setSearchQuery] = useSearchParams();\n  const query = searchQuery.get('query') ?? '';\n\n  function handleSubmitSearchQuery({ searchMovie }) {\n    if (searchMovie === '') {\n      setError(constMessage.emptyLine);\n      setSearchResult([]);\n      return setSearchQuery({});\n    }\n\n    setSearchQuery({ query: searchMovie });\n  }\n\n  useEffect(() => {\n    if (query === '') return;\n    setSearchResult([]);\n    const abortCtrl = new AbortController();\n\n    async function searchFilm() {\n      setIsLoading(true);\n      try {\n        const { results } = await getSearchFilm(query, abortCtrl);\n\n        if (!results.length) {\n          setError(constMessage.errorFetch);\n          return;\n        }\n\n        setSearchResult([...results]);\n        setError(null);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError(constMessage.errorFetch);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    searchFilm();\n\n    return () => {\n      abortCtrl.abort();\n    };\n  }, [query]);\n\n  return (\n    <section>\n      <MoviesForm onSubmitForm={handleSubmitSearchQuery} />\n\n      {isError !== null && <ErrorMessage>{isError}</ErrorMessage>}\n      {isLoading && <Loader />}\n      {searchResult && <MovieList films={searchResult} />}\n    </section>\n  );\n};\n\nexport default Movies;\n"],"names":["Message","styled","children","emptyOverview","emptyGenres","emptyLine","errorFetch","errorCast","errorRewievs","getTrendingFilms","abortCtrl","axios","signal","responce","data","getCurrentFilms","id","getInfoFilm","category","getSearchFilm","movie","api_key","width","height","src","alt","List","Item","ItemLink","Link","WrapperText","MovieTitle","Text","Image","title","poster_path","overview","location","useLocation","to","state","from","constEmpty","films","map","SearchForm","Form","Input","Field","Label","Button","onSubmitForm","initialValues","searchMovie","onSubmit","values","resetForm","type","name","useState","searchResult","setSearchResult","isLoading","setIsLoading","isError","setError","useSearchParams","searchQuery","setSearchQuery","query","get","useEffect","AbortController","searchFilm","abort","results","length","constMessage","code","ErrorMessage","Loader","MovieList"],"sourceRoot":""}